{"version":3,"sources":["UserTab.js","TransactionData.js","App.js","reportWebVitals.js","index.js"],"names":["UserTab","useState","data","setData","useEffect","fetch","then","response","console","log","json","myJson","table","payload","className","style","textAlign","border","Object","keys","map","attr","toUpperCase","att","name","ticker","asset_class","avg_price","market_price","market_value_ccy","latest_chg_pct","TransactionData","transactions","ticketref","traded_on","quantity","currency","settlement_amount","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA4DeA,MA1Df,WAEE,MAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KAqCA,OAzBAC,qBAAU,WAVRC,MAAM,wDACHC,MAAK,SAASC,GAEb,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAEjBJ,MAAK,SAASK,GACbH,QAAQI,MAAMD,EAAOE,SACrBV,EAAQQ,EAAOE,YAKnBL,QAAQC,IAAI,oBAEZ,IAsBA,sBAAKK,UAAU,MAAf,UACC,8BACA,oBAAIC,MAAO,CAACC,UAAU,UAAtB,uBAEA,8BACG,kCACI,gCACI,oBAAID,MAAO,CAAEE,OAAQ,kBAArB,SA3BLC,OAAOC,KAAKjB,EAAK,GAAGA,EAAK,GAAG,IAAIkB,KAAI,SAAAC,GAAI,OAAI,+BAAmBA,EAAKC,cAAxB,UAAYD,UA6B7D,gCA1BKnB,EAAKkB,KAAI,SAAAG,GACd,OACI,qBAAIR,MAAO,CAAEE,OAAQ,kBAArB,UACI,mCAAMM,EAAIC,QACV,6BAAKD,EAAIE,SACT,6BAAKF,EAAIG,cACT,6BAAKH,EAAII,YACT,6BAAKJ,EAAIK,eACT,6BAAKL,EAAIM,mBACT,6BAAKN,EAAIO,kCCkCRC,MAjEf,WAEE,MAAqB9B,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KAgCA,OApBAC,qBAAU,WAVRC,MAAM,4DACHC,MAAK,SAASC,GAEb,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAEjBJ,MAAK,SAASK,GACbH,QAAQI,MAAMD,EAAOqB,cACrB7B,EAAQQ,EAAOqB,mBAKnB,IAmBA,sBAAKlB,UAAU,MAAf,UACC,8BACE,oBAAIC,MAAO,CAACC,UAAU,UAAtB,uBAEF,8BACF,wBAAOD,MAAO,CAAEE,OAAQ,kBAAxB,UACE,gCACG,+BACA,sCACA,4CACA,4CACA,qCACA,qCACA,wDAGF,gCAhCKf,EAAKkB,KAAI,SAAAG,GACd,OACI,+BACI,+BAAKA,EAAIC,KAAT,OACA,+BAAKD,EAAIU,UAAT,OACA,+BAAKV,EAAIW,UAAT,OACA,+BAAKX,EAAIY,SAAT,OACA,+BAAKZ,EAAIa,SAAT,OACA,+BAAKb,EAAIc,kBAAT,wBCZCC,MAbf,WAIE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.db3ea547.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction UserTab() {\r\n\r\n  const [data,setData]=useState([]);\r\n  const getData=()=>{\r\n    fetch(\"https://canopy-frontend-task.vercel.app/api/holdings\")\r\n      .then(function(response){\r\n        console.log(response)\r\n        return response.json();\r\n      })\r\n      .then(function(myJson) {\r\n        console.table(myJson.payload);\r\n        setData(myJson.payload)\r\n      });\r\n  }\r\n  useEffect(()=>{\r\n    getData()\r\n    console.log(\"data from json\");\r\n   \r\n  },[])\r\n  var tb=()=>{\r\n    return Object.keys(data[0]?data[0]:\"\").map(attr => <th    key={attr}>{attr.toUpperCase()}     </th>)\r\n  }\r\n  var tr=()=>{\r\n    return data.map(att=>{\r\n      return (\r\n          <tr style={{ border: 'solid 1px blue' }}>\r\n              <td> {att.name}</td>\r\n              <td>{att.ticker}</td>\r\n              <td>{att.asset_class}</td>\r\n              <td>{att.avg_price}</td>\r\n              <td>{att.market_price}</td>\r\n              <td>{att.market_value_ccy}</td>\r\n              <td>{att.latest_chg_pct}</td>\r\n         </tr>\r\n\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     <div >\r\n     <h1 style={{textAlign:'center'}}>JSON 1 </h1>\r\n     </div>\r\n     <div>\r\n        <table >\r\n            <thead>\r\n                <tr style={{ border: 'solid 1px blue' }}>{tb()}</tr>\r\n            </thead>\r\n      <tbody>\r\n        { tr() }\r\n      </tbody>\r\n   </table>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserTab;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction TransactionData() {\r\n\r\n  const [data,setData]=useState([]);\r\n  const getData=()=>{\r\n    fetch(\"https://canopy-frontend-task.vercel.app/api/transactions\")\r\n      .then(function(response){\r\n        console.log(response)\r\n        return response.json();\r\n      })\r\n      .then(function(myJson) {\r\n        console.table(myJson.transactions);\r\n        setData(myJson.transactions)\r\n      });\r\n  }\r\n  useEffect(()=>{\r\n    getData()\r\n  },[])\r\n  \r\n  var tr=()=>{\r\n    return data.map(att=>{\r\n      return (\r\n          <tr >\r\n              <td>{att.name} </td>\r\n              <td>{att.ticketref} </td>\r\n              <td>{att.traded_on} </td>\r\n              <td>{att.quantity } </td>\r\n              <td>{att.currency} </td>\r\n              <td>{att.settlement_amount} </td>\r\n          </tr>\r\n\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     <div>\r\n       <h1 style={{textAlign:'center'}}>JSON 2 </h1>\r\n     </div>\r\n     <div>\r\n   <table style={{ border: 'solid 1px blue' }}>\r\n     <thead>\r\n        <tr>\r\n        <th>Name</th>\r\n        <th>Ticket Ref</th>\r\n        <th>Trade Date</th>\r\n        <th>QTY</th>\r\n        <th>CCY</th>\r\n        <th>Settlement Amount</th>\r\n        </tr>\r\n     </thead>\r\n      <tbody>\r\n        {\r\n         tr() \r\n        }\r\n      </tbody>\r\n   </table>\r\n    </div>\r\n    \r\n   \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default TransactionData;","import './App.css';\nimport UserTab from './UserTab';\nimport TransactionData from './TransactionData';\n\n\nfunction App() {\n\n \n\n  return (\n    <div>\n      <UserTab/>\n      <TransactionData/>\n     \n    </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}